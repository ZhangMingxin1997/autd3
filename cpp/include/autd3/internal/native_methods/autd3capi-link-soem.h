#pragma once

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <cstdint>

namespace autd3::internal::native_methods {

enum class SyncMode : uint8_t {
  FreeRun = 0,
  DC = 1,
};

extern "C" {

[[nodiscard]] void* AUTDAdapterPointer();

[[nodiscard]] uint32_t AUTDAdapterGetSize(void* adapters);

void AUTDAdapterGetAdapter(void* adapters, uint32_t idx, char *desc, char *name);

void AUTDAdapterPointerDelete(void* adapters);

[[nodiscard]] LinkPtr AUTDLinkSOEM();

[[nodiscard]] LinkPtr AUTDLinkSOEMWithSendCycle(LinkPtr soem, uint16_t cycle);

[[nodiscard]] LinkPtr AUTDLinkSOEMWithSync0Cycle(LinkPtr soem, uint16_t cycle);

[[nodiscard]] LinkPtr AUTDLinkSOEMWithBufSize(LinkPtr soem, uint32_t buf_size);

[[nodiscard]] LinkPtr AUTDLinkSOEMWithTimerStrategy(LinkPtr soem, TimerStrategy timer_strategy);

[[nodiscard]] LinkPtr AUTDLinkSOEMWithSyncMode(LinkPtr soem, SyncMode mode);

[[nodiscard]] LinkPtr AUTDLinkSOEMWithIfname(LinkPtr soem, const char *ifname);

[[nodiscard]] LinkPtr AUTDLinkSOEMWithStateCheckInterval(LinkPtr soem, uint32_t interval_ms);

[[nodiscard]] LinkPtr AUTDLinkSOEMWithOnLost(LinkPtr soem, void* on_lost_func);

[[nodiscard]] LinkPtr AUTDLinkSOEMWithLogLevel(LinkPtr soem, Level level);

[[nodiscard]] LinkPtr AUTDLinkSOEMWithLogFunc(LinkPtr soem, void* out_func, void* flush_func);

[[nodiscard]] LinkPtr AUTDLinkSOEMWithTimeout(LinkPtr soem, uint64_t timeout_ns);

[[nodiscard]] LinkPtr AUTDLinkRemoteSOEM(const char *addr, char *err);

[[nodiscard]] LinkPtr AUTDLinkRemoteSOEMWithTimeout(LinkPtr soem, uint64_t timeout_ns);

} // extern "C"

} // namespace autd3::internal::native_methods
