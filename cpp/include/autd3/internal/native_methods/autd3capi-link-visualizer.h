#pragma once

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <cstdint>

namespace autd3::internal::native_methods {

enum class Backend : uint8_t {
  Plotters = 0,
  Python = 1,
  Null = 2,
};

enum class CMap : uint8_t {
  Jet = 0,
  Viridis = 1,
  Magma = 2,
  Inferno = 3,
  Plasma = 4,
  Cividis = 5,
  Turbo = 6,
  Circle = 7,
  Bluered = 8,
  Breeze = 9,
  Mist = 10,
  Earth = 11,
  Hell = 12,
};

enum class Directivity : uint8_t {
  Sphere = 0,
  T4010A1 = 1,
};

struct PlotRangePtr {
  void* _0;
};

struct ConfigPtr {
  void* _0;
};

struct NullPlotConfigPtr {
  void* _0;
};

struct PlotConfigPtr {
  void* _0;
};

struct PyPlotConfigPtr {
  void* _0;
};

extern "C" {

[[nodiscard]]
PlotRangePtr AUTDLinkVisualizerPlotRange(double x_min,
                                         double x_max,
                                         double y_min,
                                         double y_max,
                                         double z_min,
                                         double z_max,
                                         double resolution);

uint32_t AUTDLinkVisualizerPhasesOf(LinkPtr visualizer,
                                    Backend backend,
                                    Directivity directivity,
                                    uint32_t idx,
                                    double *buf);

uint32_t AUTDLinkVisualizerDutiesOf(LinkPtr visualizer,
                                    Backend backend,
                                    Directivity directivity,
                                    uint32_t idx,
                                    double *buf);

uint32_t AUTDLinkVisualizerModulationRaw(LinkPtr visualizer,
                                         Backend backend,
                                         Directivity directivity,
                                         double *buf);

uint32_t AUTDLinkVisualizerModulation(LinkPtr visualizer,
                                      Backend backend,
                                      Directivity directivity,
                                      double *buf);

int32_t AUTDLinkVisualizerCalcFieldOf(LinkPtr visualizer,
                                      Backend backend,
                                      Directivity directivity,
                                      const double *points,
                                      uint32_t points_len,
                                      GeometryPtr geometry,
                                      uint32_t idx,
                                      double *buf,
                                      char *err);

[[nodiscard]]
int32_t AUTDLinkVisualizerPlotFieldOf(LinkPtr visualizer,
                                      Backend backend,
                                      Directivity directivity,
                                      ConfigPtr config,
                                      PlotRangePtr range,
                                      GeometryPtr geometry,
                                      uint32_t idx,
                                      char *err);

[[nodiscard]]
int32_t AUTDLinkVisualizerPlotPhaseOf(LinkPtr visualizer,
                                      Backend backend,
                                      Directivity directivity,
                                      ConfigPtr config,
                                      GeometryPtr geometry,
                                      uint32_t idx,
                                      char *err);

[[nodiscard]]
int32_t AUTDLinkVisualizerPlotModulationRaw(LinkPtr visualizer,
                                            Backend backend,
                                            Directivity directivity,
                                            ConfigPtr config,
                                            char *err);

[[nodiscard]]
int32_t AUTDLinkVisualizerPlotModulation(LinkPtr visualizer,
                                         Backend backend,
                                         Directivity directivity,
                                         ConfigPtr config,
                                         char *err);

[[nodiscard]] LinkBuilderPtr AUTDLinkVisualizerSphereNull(bool use_gpu, int32_t gpu_idx);

[[nodiscard]] LinkBuilderPtr AUTDLinkVisualizerT4010A1Null(bool use_gpu, int32_t gpu_idx);

[[nodiscard]] NullPlotConfigPtr AUTDLinkVisualizerNullPlotConfigDefault();

[[nodiscard]] LinkBuilderPtr AUTDLinkVisualizerSpherePlotters(bool use_gpu, int32_t gpu_idx);

[[nodiscard]] LinkBuilderPtr AUTDLinkVisualizerT4010A1Plotters(bool use_gpu, int32_t gpu_idx);

[[nodiscard]] PlotConfigPtr AUTDLinkVisualizerPlotConfigDefault();

[[nodiscard]]
PlotConfigPtr AUTDLinkVisualizerPlotConfigWithFigSize(PlotConfigPtr config,
                                                      uint32_t width,
                                                      uint32_t height);

[[nodiscard]]
PlotConfigPtr AUTDLinkVisualizerPlotConfigWithCBarSize(PlotConfigPtr config,
                                                       double cbar_size);

[[nodiscard]]
PlotConfigPtr AUTDLinkVisualizerPlotConfigWithFontSize(PlotConfigPtr config,
                                                       uint32_t font_size);

[[nodiscard]]
PlotConfigPtr AUTDLinkVisualizerPlotConfigWithLabelAreaSize(PlotConfigPtr config,
                                                            uint32_t label_area_size);

[[nodiscard]]
PlotConfigPtr AUTDLinkVisualizerPlotConfigWithMargin(PlotConfigPtr config,
                                                     uint32_t margin);

[[nodiscard]]
PlotConfigPtr AUTDLinkVisualizerPlotConfigWithTicksStep(PlotConfigPtr config,
                                                        double ticks_step);

[[nodiscard]] PlotConfigPtr AUTDLinkVisualizerPlotConfigWithCMap(PlotConfigPtr config, CMap cmap);

[[nodiscard]]
PlotConfigPtr AUTDLinkVisualizerPlotConfigWithFName(PlotConfigPtr config,
                                                    const char *fname,
                                                    char *err);

[[nodiscard]] LinkBuilderPtr AUTDLinkVisualizerSpherePython(bool use_gpu, int32_t gpu_idx);

[[nodiscard]] LinkBuilderPtr AUTDLinkVisualizerT4010A1Python(bool use_gpu, int32_t gpu_idx);

[[nodiscard]] PyPlotConfigPtr AUTDLinkVisualizerPyPlotConfigDefault();

[[nodiscard]]
PyPlotConfigPtr AUTDLinkVisualizerPyPlotConfigWithFigSize(PyPlotConfigPtr config,
                                                          int32_t width,
                                                          int32_t height);

[[nodiscard]]
PyPlotConfigPtr AUTDLinkVisualizerPyPlotConfigWithDPI(PyPlotConfigPtr config,
                                                      int32_t dpi);

[[nodiscard]]
PyPlotConfigPtr AUTDLinkVisualizerPyPlotConfigWithCBarPosition(PyPlotConfigPtr config,
                                                               const char *cbar_position,
                                                               char *err);

[[nodiscard]]
PyPlotConfigPtr AUTDLinkVisualizerPyPlotConfigWithCBarSize(PyPlotConfigPtr config,
                                                           const char *cbar_size,
                                                           char *err);

[[nodiscard]]
PyPlotConfigPtr AUTDLinkVisualizerPyPlotConfigWithCBarPad(PyPlotConfigPtr config,
                                                          const char *cbar_pad,
                                                          char *err);

[[nodiscard]]
PyPlotConfigPtr AUTDLinkVisualizerPyPlotConfigWithFontSize(PyPlotConfigPtr config,
                                                           int32_t fontsize);

[[nodiscard]]
PyPlotConfigPtr AUTDLinkVisualizerPyPlotConfigWithTicksStep(PyPlotConfigPtr config,
                                                            double ticks_step);

[[nodiscard]]
PyPlotConfigPtr AUTDLinkVisualizerPyPlotConfigWithCMap(PyPlotConfigPtr config,
                                                       const char *cmap,
                                                       char *err);

[[nodiscard]]
PyPlotConfigPtr AUTDLinkVisualizerPyPlotConfigWithShow(PyPlotConfigPtr config,
                                                       bool show);

[[nodiscard]]
PyPlotConfigPtr AUTDLinkVisualizerPyPlotConfigWithFName(PyPlotConfigPtr config,
                                                        const char *fname,
                                                        char *err);

} // extern "C"

} // namespace autd3::internal::native_methods
