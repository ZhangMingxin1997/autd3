include(CheckCXXCompilerFlag)
function(enable_cxx_compiler_flag_if_supported target scope flag)
  check_cxx_compiler_flag("${flag}" flag_supported)
  if(flag_supported)
    target_compile_options(${target} ${scope} ${flag})
    endif()
  unset(flag_supported CACHE)
endfunction()

function(update_git_submodule target)
  set(recursive_flag RECURSIVE FAST)
  cmake_parse_arguments(UPDATE_GIT_SUBMODULE "${recursive_flag}" "" "" ${ARGN})
  if(Git_FOUND)
    if(${UPDATE_GIT_SUBMODULE_RECURSIVE})
      execute_process(COMMAND git -C ${PROJECT_SOURCE_DIR} submodule update --init --recursive -- ${PROJECT_SOURCE_DIR}/3rdparty/${target})
    else()
      execute_process(COMMAND git -C ${PROJECT_SOURCE_DIR} submodule update --init -- ${PROJECT_SOURCE_DIR}/3rdparty/${target})
    endif()
  endif()
endfunction()
