name: 'build tools setup action'
inputs:
  github-token:
    description: 'GITHUB_TOKEN'
    required: true
    default: ''
  os:
    description: 'os'
    required: true
    default: ''
  arch:
    description: 'arch'
    required: false
    default: ''
  cuda:
    description: 'use cuda'
    required: false
    default: false
  shaderc:
    description: 'use shaderc'
    required: false
    default: false
runs:
  using: "composite"
  steps:
    - name: Install packaging
      shell: bash
      if: inputs.os == 'macos-latest'
      run: |
        python3 -m pip install -U packaging

    - name: Install Protoc
      uses: arduino/setup-protoc@v2
      with:
        repo-token: ${{ inputs.github-token }}

    - uses: Jimver/cuda-toolkit@v0.2.11
      if: inputs.cuda && inputs.os == 'windows-latest'
      with:
        cuda: '12.2.0'
        method: 'network'
        sub-packages: '["nvcc", "cudart", "cublas_dev", "cusolver_dev"]'
    - name: install cuda
      shell: bash
      if: inputs.cuda && inputs.os == 'ubuntu-latest'
      run: |
        wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-keyring_1.1-1_all.deb
        sudo dpkg -i cuda-keyring_1.1-1_all.deb
        sudo apt-get update
        sudo apt-get -y install cuda-nvcc-12-2 libcublas-dev-12-2 libcusolver-dev-12-2
        echo "/usr/local/cuda/bin" >> $GITHUB_PATH

    - name: install shaderc
      shell: pwsh
      if: inputs.shaderc && inputs.os == 'windows-latest'
      run: |
        Invoke-WebRequest -URI https://storage.googleapis.com/shaderc/artifacts/prod/graphics_shader_compiler/shaderc/windows/continuous_release_2019/10/20230531-104731/install.zip -OutFile shaderc.zip
        Expand-Archive -Path shaderc.zip -DestinationPath shaderc
        echo "SHADERC_LIB_DIR=$Env:GITHUB_WORKSPACE/shaderc/install/lib" >> $Env:GITHUB_ENV
        rm shaderc.zip
    - name: install shaderc
      shell: bash
      if: inputs.shaderc && inputs.os == 'ubuntu-latest'
      run: |
        curl -L https://storage.googleapis.com/shaderc/artifacts/prod/graphics_shader_compiler/shaderc/linux/continuous_clang_release/418/20230531-104531/install.tgz > shaderc.tgz
        tar -xzf shaderc.tgz
        echo "SHADERC_LIB_DIR=$GITHUB_WORKSPACE/install/lib" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=$GITHUB_WORKSPACE/install/lib" >> $GITHUB_ENV
        rm shaderc.tgz
    - name: install shaderc
      shell: bash
      if: inputs.shaderc && inputs.os == 'macos-latest'
      run: |
        curl -L https://storage.googleapis.com/shaderc/artifacts/prod/graphics_shader_compiler/shaderc/macos/continuous_clang_release/426/20230531-104534/install.tgz > shaderc.tgz
        tar -xzf shaderc.tgz
        echo "SHADERC_LIB_DIR=$GITHUB_WORKSPACE/install/lib" >> $GITHUB_ENV
        echo "DYLD_LIBRARY_PATH=$GITHUB_WORKSPACE/install/lib" >> $GITHUB_ENV
        cp install/lib/*.dylib /usr/local/lib/
        rm shaderc.tgz

    - name: install aarch64 target on macos
      shell: bash
      if: inputs.os == 'macos-latest'
      run: |
        rustup target add aarch64-apple-darwin

    - name: install dependencies
      shell: bash
      if: inputs.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libfreetype6-dev libfontconfig1-dev

    - name: install arm32 target on linux
      shell: bash
      if : inputs.os == 'ubuntu-latest' && inputs.arch == 'arm32'
      run : |
        sudo apt-get update
        sudo apt-get -y install gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf
        rustup target add armv7-unknown-linux-gnueabihf

    - name: install arm64 target on linux
      shell: bash
      if : inputs.os == 'ubuntu-latest' && inputs.arch == 'aarch64'
      run : |
        sudo apt-get update
        sudo apt-get -y install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
        rustup target add aarch64-unknown-linux-gnu