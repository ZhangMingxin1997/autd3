name: build-python

on:
  push:
    branches:
      - 'develop'
  pull_request:
    types: [opened, reopened, review_requested]

env:
  CARGO_INCREMENTAL: 0

jobs:
  check:
    runs-on: ubuntu-latest
    name: check if files changed
    outputs:
      status: ${{ steps.changed-files.outputs.modified_files }}
    steps:
      - uses: actions/checkout@v3
      - uses: tj-actions/changed-files@v37
        id: changed-files
        with:
          files: |
            .github/actions/setup-build/action.yml
            .github/workflows/build-python.yml
            python/pyautd3/*.py
            python/pyautd3/**/*.py
            python/tests/*.py
            python/tests/**/*.py

  build:
    needs: check
    if: needs.check.outputs.status
    name: build-python-${{ matrix.python-version }}-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install tools
        run: |
          python3 -m pip install -U mypy numpy build wheel pytest

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './capi -> target'

      - name: Setup
        uses: ./.github/actions/setup-build
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          os: ${{ matrix.os }}
          cuda: true

      - name: Build python library on ${{ matrix.os }}
        run: |
          python3 build.py python build --no-install --release --universal

      - name: Test python library on ${{ matrix.os }}
        run: |
          python3 build.py python test --release --skip-cuda
