name: build-python

on:
  push:
    branches:
      - 'develop'
  pull_request:
    types: [opened, reopened, review_requested]

env:
  CARGO_INCREMENTAL: 0

jobs:
  build:
    name: build-python-${{ matrix.python-version }}-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - uses: tj-actions/changed-files@v37
      id: changed-files
      with:
        files: |
          .github/workflows/build-python.yml
          python/pyautd3/*.py
          python/pyautd3/**/*.py
          python/tests/*.py
          python/tests/**/*.py

    - name: install aarch64 target on macos
      if: steps.changed-files.outputs.modified_files && matrix.os == 'macos-latest'
      run: |
        rustup target add aarch64-apple-darwin

    - name: Install Protoc
      uses: arduino/setup-protoc@v2
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
      if: steps.changed-files.outputs.modified_files
      
    - name: Rust cache
      uses: swatinem/rust-cache@v2
      with:
        workspaces: './capi -> target'
      if: steps.changed-files.outputs.modified_files

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - run: |
        python3 -m pip install -U  mypy numpy
        cd python
        python3 -m mypy pyautd3
      if: steps.changed-files.outputs.modified_files

    - run: |
        python3 -m pip install -U pytest
        cd python
        ./run_test.ps1
      if: steps.changed-files.outputs.modified_files && matrix.os == 'windows-latest'

    - run: |
        python3 -m pip install -U pytest
        cd python
        chmod +x run_test.sh
        ./run_test.sh
      if: steps.changed-files.outputs.modified_files && matrix.os != 'windows-latest'
