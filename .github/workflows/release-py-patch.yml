name: Release python patch

on:
  push:
    tags:
    - 'py-patch-v*'

jobs:
  publish_pypi:
    name: publish-python-patch-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U  twine wheel build
        cd python
        python download_bin.py
    - name: Build whl
      if: matrix.os == 'ubuntu-latest'
      run: |
        cd python
        cp -f setup.cfg.linux-x86_64 setup.cfg
        python -m build -w
    - name: Build whl
      if: matrix.os == 'windows-latest'
      run: |
        cd python
        cp -f setup.cfg.linux-x86_64 setup.cfg
        python -m build -w
    - name: Build whl
      if: matrix.os == 'macos-latest'
      run: |
        cd python
        cp -f setup.cfg.mac-x86_64 setup.cfg
        python -m build -w
        cp -f setup.cfg.mac-aarch64 setup.cfg
        python -m build -w
    - name: Publish
      run: |
        cd python
        twine upload dist/* -u ${{ secrets.TWINE_USERNAME }} -p ${{ secrets.TWINE_PASS }} --non-interactive --skip-existing

  publish_pypi-linux-arm32:
    name: publish-python-patch-linux-arm32
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U  twine wheel build
        cd python
        python download_bin.py --arch armv7
    - name: Build whl
      run: |
        cd python
        cp -f setup.cfg.linux-armv7 setup.cfg
        python -m build -w
    - name: Publish
      run: |
        cd python
        twine upload dist/* -u ${{ secrets.TWINE_USERNAME }} -p ${{ secrets.TWINE_PASS }} --non-interactive --skip-existing

  publish_pypi-linux-aarch64:
    name: publish-python-patch-linux-aarch64
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U  twine wheel build
        cd python
        python download_bin.py --arch aarch64
    - name: Build whl
      run: |
        cd python
        cp -f setup.cfg.linux-aarch64 setup.cfg
        python -m build -w
    - name: Publish
      run: |
        cd python
        twine upload dist/* -u ${{ secrets.TWINE_USERNAME }} -p ${{ secrets.TWINE_PASS }} --non-interactive --skip-existing
