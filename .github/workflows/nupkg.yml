name: Publish to NuGet

on:
  workflow_run:
    workflows: ["release"]
    types: [completed]

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1.7.2
      with:
        dotnet-version: '6.0.x'
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3 | cut -d . -f 1,2,3)
    - name: Download latest binary
      run: | 
        wget https://github.com/shinolab/autd3/releases/download/${{ steps.get_version.outputs.VERSION }}/autd3-${{ steps.get_version.outputs.VERSION }}-linux-x64.tar.gz
        wget https://github.com/shinolab/autd3/releases/download/${{ steps.get_version.outputs.VERSION }}/autd3-${{ steps.get_version.outputs.VERSION }}-macos-universal.tar.gz
        wget https://github.com/shinolab/autd3/releases/download/${{ steps.get_version.outputs.VERSION }}/autd3-${{ steps.get_version.outputs.VERSION }}-win-x64.zip
    - name: Replace latest binary
      run: |
        tar -zxvf autd3-${{ steps.get_version.outputs.VERSION }}-linux-x64.tar.gz
        tar -zxvf autd3-${{ steps.get_version.outputs.VERSION }}-macos-universal.tar.gz
        unzip -o autd3-${{ steps.get_version.outputs.VERSION }}-win-x64.zip
        rm -f ./cs/src/native/windows/x64/*
        rm -f ./cs/src/native/linux/x64/*
        rm -f ./cs/src/native/osx/x64/*
        \cp bin/*.dll ./cs/src/native/windows/x64/
        \cp bin/*.so ./cs/src/native/linux/x64/
        \cp bin/*.dylib ./cs/src/native/osx/x64/
    - name: Build with dotnet and publish to NuGet
      run: |
        dotnet build -c:Release /p:Platform=x64
        cd bin/x64/Release
        dotnet nuget push autd3sharp.*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate --no-symbols
      working-directory: ./cs/src
