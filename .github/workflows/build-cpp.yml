name: build-cpp

on:
  push:
    branches:
      - 'develop'
  pull_request:
    types: [opened, reopened, review_requested]

env:
  CARGO_INCREMENTAL: 0

jobs:
  check:
    runs-on: ubuntu-latest
    name: check if files changed
    outputs:
      status: ${{ steps.changed-files.outputs.modified_files }}
    steps:
      - uses: actions/checkout@v3
      - uses: tj-actions/changed-files@v37
        id: changed-files
        with:
          files: |
            .github/actions/setup-build/action.yml
            .github/workflows/build-cpp.yml
            cpp/**/*.hpp
            cpp/**/*.cpp

  build:
    needs: check
    if: needs.check.outputs.status
    name: build-cpp-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3
      - name: Setup
        uses: ./.github/actions/setup-build
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          os: ${{ matrix.os }}
          cuda: true

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './capi -> target'

      - name: Build C++ library on ${{ matrix.os }}
        run: |
          python3 build.py cpp build --cmake-extra="-DCMAKE_C_COMPILER=gcc-12 -DCMAKE_CXX_COMPILER=g++-12"
        if: matrix.os == 'macos-latest'
      - name: Build C++ library on ${{ matrix.os }}
        run: |
          python3 build.py cpp build
        if: matrix.os != 'macos-latest'

      - name: Run C++ tests on ${{ matrix.os }}
        run: |
          python3 build.py cpp test --cmake-extra="-DCMAKE_C_COMPILER=gcc-12 -DCMAKE_CXX_COMPILER=g++-12"
        if: matrix.os == 'macos-latest'
      - name: Run C++ tests on ${{ matrix.os }}
        run: |
          python3 build.py cpp test
        if: matrix.os != 'macos-latest'


  build-linux-arm32:
    needs: check
    if: needs.check.outputs.status
    name: build-cpp-linux-arm32
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup
        uses: ./.github/actions/setup-build
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          os: 'ubuntu-latest'
          arch: 'arm32'
          cuda: false

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './capi -> target'

      - name: Build C++ library on ${{ matrix.os }}
        run: |
          python3 build.py cpp build --arch arm32


  build-linux-aarch64:
    needs: check
    if: needs.check.outputs.status
    name: build-cpp-linux-aarch64
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup
        uses: ./.github/actions/setup-build
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          os: 'ubuntu-latest'
          arch: 'aarch64'
          cuda: false

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './capi -> target'

      - name: Build C++ library on ${{ matrix.os }}
        run: |
          python3 build.py cpp build --arch aarch64
