name: Doxygen

on:
  push:
    branches: [ doc ]  

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Document check
      run: |
        cd tools/doc_checker
        cargo run -- "../../doc/book/src/jp/FFI/reference.md"
        cargo run -- "../../doc/book/src/en/FFI/reference.md"

  check-cs:
    name: build cs windows-latest
    runs-on: windows-latest
    steps: 
    - uses: actions/checkout@v3
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'
    - name: build
      run: |
        dotnet build ./doc/book/samples/cs/cs.csproj -c:Release

  check-cpp:
    name: build cpp
    runs-on: ubuntu-latest
    steps: 
    - uses: actions/checkout@v3
    - name: build
      run: |
        mkdir build
        cd build
        cmake .. -DBUILD_LINK_SOEM=ON -DBUILD_GAIN_HOLO=OFF -DDISABLE_EXAMPLES=ON
        cmake --build . --parallel 8 --config Release
        cd ..
        copy include -Recurse ./doc/book/samples/cpp/
        mkdir ./doc/book/samples/cpp/lib
        copy build/lib/Release/*.a  ./doc/book/samples/cpp/lib
        copy 3rdparty/eigen -Recurse ./doc/book/samples/cpp/
        cd ./doc/book/samples/cpp
        mkdir build
        cd build
        cmake ..
        cmake --build . --parallel 8 --config Release

  check-nim:
    name: build nim
    runs-on: ubuntu-latest
    steps: 
    - uses: actions/checkout@v3
    - uses: jiro4989/setup-nim-action@v1
    - name: build
      run: |
        cd doc/book/samples/nim/sample
        nimble build -Y

  check-rust:
    name: build rust
    runs-on: ubuntu-latest
    steps: 
    - uses: actions/checkout@v3
    - name: build
      run: |
        cd doc/book/samples/rust/sample
        cargo build

  # check-julia:
  #   name: build julia
  #   runs-on: ubuntu-latest
  #   steps: 
  #   - uses: actions/checkout@v3
  #   - name: Set up Julia
  #     uses: julia-actions/setup-julia@v1
  #     with:
  #       version: 1.8.2
  #   - name: build
  #     run: |
  #       cd doc/book/samples/julia
  #       julia -e 'using Pkg; Pkg.add(url="https://github.com/shinolab/autd3.git", subdir="julia"); Pkg.build("AUTD3")'

  # check-python:
  #   name: build python
  #   runs-on: ubuntu-latest
  #   steps: 
  #   - uses: actions/checkout@v3
  #   - name: build
  #     run: |
  #       cd doc/book/samples/python

  build:
    needs: [check, check-cs, check-cpp]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Doxygen
      uses: ./.github/actions/cmake-doxygen-actions
    - name: mv doxygen doc_build
      run: |
        mkdir -p doc_build
        sudo mv ./build/doc/doxygen/html ./doc_build/api
    - uses: peaceiris/actions-mdbook@v1
    - name: Setup mdbook plugins
      run: |
        cargo install mdbook-linkcheck
        cargo install mdbook-toc
    - name: Setup mdbook-katex
      uses: magicgh/mdbook-katex-action@v1
      with:
        version: 'latest'
    - run: |
        cd ./doc/book
        MDBOOK_BOOK__src=src/en mdbook build --dest-dir book/en
        MDBOOK_BOOK__src=src/jp mdbook build --dest-dir book/jp
    - name: mv mdbook doc
      run: |
        mkdir -p doc_build/book
        sudo mv ./doc/book/book/en/html ./doc_build/book/en
        sudo mv ./doc/book/book/jp/html ./doc_build/book/jp
    - run: |
        cd doc/fpga
        mdbook build
    - name: mv fpga doc
      run: |
        sudo mv ./doc/fpga/book/html ./doc_build/fpga
    - run: |
        cd doc/cpu
        mdbook build
    - name: mv cpu doc
      run: |
        sudo mv ./doc/cpu/book/html ./doc_build/cpu
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./doc_build
