name: Coverage

on:
  push:
    branches:
      - 'develop'

jobs:
  check-src:
    runs-on: ubuntu-latest
    name: check if src files changed
    outputs:
      status: ${{ steps.changed-files.outputs.modified_files }}
    steps:
      - uses: actions/checkout@v3
      - uses: tj-actions/changed-files@v40
        id: changed-files
        with:
          files: |
            .github/actions/setup-build/action.yml
            .github/workflows/coverage.yml
            codecov.yml
            src/**/*.rs
            src/*.toml
            src/**/*.toml
            src/**/*.proto
            cpp/CMakeLists.txt
            cpp/**/CMakeLists.txt
            cpp/**/*.hpp
            cpp/**/*.cpp
            dotnet/cs/src/AUTD3Sharp.csproj
            dotnet/cs/src/AUTD3Sharp.nuspec
            dotnet/cs/*.cs
            dotnet/cs/**/*.cs
            python/pyautd3/*.py
            python/pyautd3/**/*.py
            python/tests/*.py
            python/tests/**/*.py

  coverage:
    needs: check-src
    if: needs.check-src.outputs.status
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup
        uses: ./.github/actions/setup-build
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          os: ubuntu-latest
          shaderc: false
      - uses: dtolnay/rust-toolchain@nightly
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Install lcov
        run: |
          sudo apt update && sudo apt -y install lcov
      - name: Setup .NET Core
        if: needs.check.outputs.status
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Generate code coverage for rust
        run: |
          python3 build.py cov
      - name: Generate code coverage for cpp
        run: |
          sudo rm /usr/bin/gcov
          sudo ln -s /usr/bin/gcov-12 /usr/bin/gcov
          python3 build.py cpp cov --cmake-extra="-DCMAKE_C_COMPILER=gcc-12 -DCMAKE_CXX_COMPILER=g++-12"
      - name: Generate code coverage for csharp
        run: |
          python build.py cs cov
          cp $(find dotnet/cs/tests -name "coverage.cobertura.xml") dotnet/cs/
      - name: Generate code coverage for python
        run: |
          python3 -m pip install -U pytest pytest-asyncio pytest-cov
          python3 -m pip install -U numpy
          python3 build.py python cov --cov_report=xml

      - name: Upload coverage to Codecov (rust)
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: src/lcov.info
          flags: rust
          fail_ci_if_error: true
      - name: Upload coverage to Codecov (cpp)
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: cpp/tests/build/CMakeFiles/test_autd3.dir/coverage.info
          flags: cpp
          fail_ci_if_error: true
      - name: Upload coverage to Codecov (csharp)
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: dotnet/cs/coverage.cobertura.xml
          flags: cs
          fail_ci_if_error: true
      - name: Upload coverage to Codecov (python)
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: python/coverage.xml
          flags: python
          fail_ci_if_error: true
