// This file is autogenerated
using System;
using System.Runtime.InteropServices;

#if UNITY_2020_2_OR_NEWER
#nullable enable
#endif

namespace AUTD3Sharp
{
    namespace NativeMethods
    {
        internal static class LinkSOEM
        {
            private const string DLL = "autd3capi_link_soem";

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public unsafe static extern IntPtr AUTDAdapterPointer();

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public unsafe static extern uint AUTDAdapterGetSize(IntPtr adapters);

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public unsafe static extern void AUTDAdapterGetAdapter(IntPtr adapters, uint idx, byte[] desc, byte[] name);

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public unsafe static extern void AUTDAdapterPointerDelete(IntPtr adapters);

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public unsafe static extern LinkSOEMBuilderPtr AUTDLinkSOEM();

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public unsafe static extern LinkSOEMBuilderPtr AUTDLinkSOEMWithSendCycle(LinkSOEMBuilderPtr soem, ulong cycle);

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public unsafe static extern LinkSOEMBuilderPtr AUTDLinkSOEMWithSync0Cycle(LinkSOEMBuilderPtr soem, ulong cycle);

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public unsafe static extern LinkSOEMBuilderPtr AUTDLinkSOEMWithBufSize(LinkSOEMBuilderPtr soem, uint bufSize);

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public unsafe static extern LinkSOEMBuilderPtr AUTDLinkSOEMWithTimerStrategy(LinkSOEMBuilderPtr soem, TimerStrategy timerStrategy);

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public unsafe static extern LinkSOEMBuilderPtr AUTDLinkSOEMWithSyncMode(LinkSOEMBuilderPtr soem, SyncMode mode);

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public unsafe static extern LinkSOEMBuilderPtr AUTDLinkSOEMWithIfname(LinkSOEMBuilderPtr soem, string ifname);

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public unsafe static extern LinkSOEMBuilderPtr AUTDLinkSOEMWithStateCheckInterval(LinkSOEMBuilderPtr soem, uint intervalMs);

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public unsafe static extern LinkSOEMBuilderPtr AUTDLinkSOEMWithOnLost(LinkSOEMBuilderPtr soem, IntPtr onLostFunc);

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public unsafe static extern LinkSOEMBuilderPtr AUTDLinkSOEMWithOnErr(LinkSOEMBuilderPtr soem, IntPtr onErrFunc);

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public unsafe static extern LinkSOEMBuilderPtr AUTDLinkSOEMWithTimeout(LinkSOEMBuilderPtr soem, ulong timeoutNs);

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public unsafe static extern LinkBuilderPtr AUTDLinkSOEMIntoBuilder(LinkSOEMBuilderPtr soem);

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public unsafe static extern LinkRemoteSOEMBuilderPtr AUTDLinkRemoteSOEM(string addr, byte[] err);

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public unsafe static extern LinkRemoteSOEMBuilderPtr AUTDLinkRemoteSOEMWithTimeout(LinkRemoteSOEMBuilderPtr soem, ulong timeoutNs);

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public unsafe static extern LinkBuilderPtr AUTDLinkRemoteSOEMIntoBuilder(LinkRemoteSOEMBuilderPtr soem);
        }
    }

    public enum SyncMode : byte
    {
        FreeRun = 0,
        Dc = 1,
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct LinkSOEMBuilderPtr
    {
        public IntPtr _0;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct LinkRemoteSOEMBuilderPtr
    {
        public IntPtr _0;
    }

}

#if UNITY_2020_2_OR_NEWER
#nullable disable
#endif


